% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SignalTable.R
\name{SignalTable}
\alias{SignalTable}
\title{R6 Class representing a signal data frame}
\description{
This is an implementation of the Signal interface that is
  composed of a DataTable object for the time series data
}
\section{Super class}{
\code{\link[disco:Signal]{disco::Signal}} -> \code{SignalTable}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{table}}{The data frame object containing the time series data}

\item{\code{timeVariableName}}{The name of the column in the data frame with the time data}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{SignalTable$new()}}
\item \href{#method-constructFromCSV}{\code{SignalTable$constructFromCSV()}}
\item \href{#method-getVariable}{\code{SignalTable$getVariable()}}
\item \href{#method-getWindow}{\code{SignalTable$getWindow()}}
\item \href{#method-plotSummary}{\code{SignalTable$plotSummary()}}
\item \href{#method-plot}{\code{SignalTable$plot()}}
\item \href{#method-addVariable}{\code{SignalTable$addVariable()}}
\item \href{#method-writeCSV}{\code{SignalTable$writeCSV()}}
\item \href{#method-writeMetadata}{\code{SignalTable$writeMetadata()}}
\item \href{#method-interpolate}{\code{SignalTable$interpolate()}}
\item \href{#method-trim}{\code{SignalTable$trim()}}
\item \href{#method-trimEdges}{\code{SignalTable$trimEdges()}}
\item \href{#method-trimWindow}{\code{SignalTable$trimWindow()}}
\item \href{#method-filterOut}{\code{SignalTable$filterOut()}}
\item \href{#method-getLength}{\code{SignalTable$getLength()}}
\item \href{#method-writeRData}{\code{SignalTable$writeRData()}}
\item \href{#method-clone}{\code{SignalTable$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create an instance of class SignalTable
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SignalTable$new(
  dataframe = NULL,
  meta = NULL,
  metaColumns = NULL,
  table = DataTable$new(dataframe = dataframe, meta = meta, metaColumns = metaColumns),
  timeVariableName = "time",
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataframe}}{Optional R S3 dataframe providing the data.
Defaults to NULL which allows a specific DataTable object to be supplied.}

\item{\code{meta}}{Optional R S3 dataframe of metadata.
Defaults to NULL.}

\item{\code{metaColumns}}{Optional R S3 dataframe of metadata for the columns in the signal.
Defaults to NULL}

\item{\code{table}}{The data table providing the basis of the signal.
Defaults to a new DataTable object based on the R S3 dataframe 
and metadata provided.}

\item{\code{timeVariableName}}{The property name for the table column with time data.
Defaults to "time". If the result of checking for a time column
returns NULL, then the time attribute will remain NULL after construction.}

\item{\code{...}}{Arguments passed to as.POSIXct for coverting the time
data to a POSIXct vector. Note that the system time zone will be
assumed if a tz argument is not provided.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-constructFromCSV"></a>}}
\if{latex}{\out{\hypertarget{method-constructFromCSV}{}}}
\subsection{Method \code{constructFromCSV()}}{
Static method that constructs a signal based on a series of csv files providing
  data and metadata bout the signal
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SignalTable$constructFromCSV(
  filePath,
  metaPath = NULL,
  timeVariableName = "time",
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{filePath}}{Path to the data file}

\item{\code{metaPath}}{Optional path to the metadata file.
Default is NULL.}

\item{\code{timeVariableName}}{The header in the csv data for the column with
time data.
Defaults to "time".}

\item{\code{...}}{Abstract parameters that are passed to the class constructor}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new SignalTable object based on the provided csv files
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getVariable"></a>}}
\if{latex}{\out{\hypertarget{method-getVariable}{}}}
\subsection{Method \code{getVariable()}}{
Get the time series vector for the variable with the provided name
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SignalTable$getVariable(variableName)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{variableName}}{Name of the variable for which the data will be provided}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The vector of values for the requested variable
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getWindow"></a>}}
\if{latex}{\out{\hypertarget{method-getWindow}{}}}
\subsection{Method \code{getWindow()}}{
Get a subset of the signal based on a provided window of time
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SignalTable$getWindow(minTime, maxTime)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{minTime}}{The starting time of the window}

\item{\code{maxTime}}{The ending time of the window}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new signal object representing the subset of the current signal
  defined by the provided minimum and maximum times.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-plotSummary"></a>}}
\if{latex}{\out{\hypertarget{method-plotSummary}{}}}
\subsection{Method \code{plotSummary()}}{
Plot a summary of the multivariate signal
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SignalTable$plotSummary(
  x = NULL,
  mfrow = c(length(self$table$data) - 1, 1),
  mar = c(4, 4, 1, 1) + 0.1
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{Vector to plot on the x axis
Defaults to signal time variable}

\item{\code{mfrow}}{Value for graphing parameter controlling multipanel plots
Defaults to \code{c(length(self$table$data) - 1, 1)}}

\item{\code{mar}}{Value for the graphing parameter controling margins
Defaults to \code{c(4, 4, 1, 1) + 0.1}}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
No defined return value.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-plot"></a>}}
\if{latex}{\out{\hypertarget{method-plot}{}}}
\subsection{Method \code{plot()}}{
Plots a single variable in the signal based on the provided header
  for the variable
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SignalTable$plot(
  variableHeader,
  x = self$time,
  timeZone = NA,
  y = self$table$data[[variableHeader]],
  xlim = c(min(x), max(x)),
  xlab = self$timeVariableName,
  ylim = c(min(y, na.rm = TRUE), max(y, na.rm = TRUE)),
  ylab = sprintf("\%s (\%s)", variableHeader, self$table$metaColumns["units",
    variableHeader]),
  compareWith = list(),
  comp.colors = c("purple", "orange", "green"),
  comp.pchs = c(0, 2, 5),
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{variableHeader}}{Name of the variable to plot on the y axis.}

\item{\code{x}}{Variable plotted on x axis. 
Default value is the time.}

\item{\code{timeZone}}{If specified, the time zone for the datetime scale.
Defult value is NA (no change in time zone).}

\item{\code{y}}{Variable plotted on y axis. 
Default value is the values in the provided variableHeader argument.}

\item{\code{xlim}}{Vector of 2 values for the min and max of x axis scale.
Default is min and max of x variable}

\item{\code{xlab}}{Label for x axis.
Default value is the header for time data.}

\item{\code{ylim}}{Vector of 2 values for the min and max of y axis scale.
Default value is min and max of y variable.}

\item{\code{ylab}}{Label for y axis.
Default value is the header selected and the units
for that variable}

\item{\code{compareWith}}{Vector of signals to plot on the same axes.
Specifying signals for comparison will adjust the xlim
and ylim values to be sure all values will be visible on
plot.
Default value is an empty list (no additional plots).}

\item{\code{comp.colors}}{A vector of character strings specifying colors for additional
plots.
Defaults to a color blind friendly palette of purple, orange,
and green.}

\item{\code{comp.pchs}}{A vector of integers specifying the point symbol to use for 
additional plots.
Defaults to square, triangle, and diamond.}

\item{\code{...}}{Any remaining arguments provided will be passed to the call to
the plot.default method, allowing for further customization of
the plot.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
No defined return value.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-addVariable"></a>}}
\if{latex}{\out{\hypertarget{method-addVariable}{}}}
\subsection{Method \code{addVariable()}}{
Add a variable to a signal
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SignalTable$addVariable(variableHeader, metadata, values)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{variableHeader}}{The header for the property name for the new variable}

\item{\code{metadata}}{The metadata for the column}

\item{\code{values}}{The vector of values for the new column}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
No defined return value
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-writeCSV"></a>}}
\if{latex}{\out{\hypertarget{method-writeCSV}{}}}
\subsection{Method \code{writeCSV()}}{
Write the signal in csv format
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SignalTable$writeCSV(path, name, headers = NULL, writeMetadata = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{path}}{The path to the written files}

\item{\code{name}}{The base name of the written files}

\item{\code{headers}}{Optional vector of variable names to specify the columns to be output.
Defaults to NULL which will output all columns.}

\item{\code{writeMetadata}}{Optional logical value to determine if metadata are written
Defaults to TRUE.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
No defined return value.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-writeMetadata"></a>}}
\if{latex}{\out{\hypertarget{method-writeMetadata}{}}}
\subsection{Method \code{writeMetadata()}}{
Writes the metadata object as an XML file
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SignalTable$writeMetadata()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
No defined return value
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-interpolate"></a>}}
\if{latex}{\out{\hypertarget{method-interpolate}{}}}
\subsection{Method \code{interpolate()}}{
Interpolates a signal based on the provided time vector
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SignalTable$interpolate(time)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{time}}{Time vector providing the basis for the interpolation}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new signal with values interpolated from the current
  signal based on the provided time vector
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-trim"></a>}}
\if{latex}{\out{\hypertarget{method-trim}{}}}
\subsection{Method \code{trim()}}{
Trims the signal based on indices provided
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SignalTable$trim(firstIndex, lastIndex)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{firstIndex}}{Index that will become the first element of the signal}

\item{\code{lastIndex}}{Index that will become the last element of the signal}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The new length of the signal
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-trimEdges"></a>}}
\if{latex}{\out{\hypertarget{method-trimEdges}{}}}
\subsection{Method \code{trimEdges()}}{
Trims the signal based on skipped rows
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SignalTable$trimEdges(skipBeginning, skipEnding)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{skipBeginning}}{Rows to skip at the beginning of the signal}

\item{\code{skipEnding}}{Rows to skip at the end of the signal}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The new length of the signal
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-trimWindow"></a>}}
\if{latex}{\out{\hypertarget{method-trimWindow}{}}}
\subsection{Method \code{trimWindow()}}{
Trims the signal based on removing a window
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SignalTable$trimWindow(startIndex, endIndex)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{startIndex}}{First index of window to be removed}

\item{\code{endIndex}}{Last index of window to be removed}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The new length of the signal
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-filterOut"></a>}}
\if{latex}{\out{\hypertarget{method-filterOut}{}}}
\subsection{Method \code{filterOut()}}{
Removes the rows designated by the provided indices
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SignalTable$filterOut(index)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{index}}{A vector of numerical or logical indices. The rows specified by
the numbers in the vector will be removed, or logical values of 'FALSE' 
in the vector will indicate that row should be removed removed.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The new length of the signal after rows are removed
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getLength"></a>}}
\if{latex}{\out{\hypertarget{method-getLength}{}}}
\subsection{Method \code{getLength()}}{
Gets the length of the signal
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SignalTable$getLength()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The length of the signal (number of rows in the
  unerlying data table).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-writeRData"></a>}}
\if{latex}{\out{\hypertarget{method-writeRData}{}}}
\subsection{Method \code{writeRData()}}{
Writes the signal as a list in an RData file
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SignalTable$writeRData(path, name, timeVariableName = NULL, variables = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{path}}{The path to the written file}

\item{\code{name}}{The base name of the written file}

\item{\code{timeVariableName}}{Optional name of the the time variable to write in the data
Defaults to NULL which will result in the time variable
not being written to the output.}

\item{\code{variables}}{Optional vector of variable names to specify the columns to be output.
Defaults to NULL which will output all columns.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
No defined return value.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SignalTable$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
