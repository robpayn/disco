% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DielWindowedSignal.R
\name{DielWindowedSignal}
\alias{DielWindowedSignal}
\title{R6 class defining a diel windowed signal analysis}
\value{
This function is called by the constructor (new()) method of the 
  R6 class generator. The constructor returns a new instance of this
  class.
}
\description{
Manages a windowed signal analysis, where the windows are 
  described by a shifting period of time starting at a given
  time of day, ending at a given time of day, and with a duration
  of a defined number of days apart.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{signal}}{The signal containing the data to be windowed}

\item{\code{path}}{The directory path to the windows}

\item{\code{dateStart}}{The start date for the windows}

\item{\code{dateEnd}}{The end date for the windows}

\item{\code{windows}}{Vector of dates representing the start of each window}

\item{\code{windowStart}}{The time of day each window starts}

\item{\code{windowEnd}}{The time of day each window ends}

\item{\code{windowDays}}{The number of days composing each window}

\item{\code{timeZone}}{Character string representing the time zone}

\item{\code{slideDays}}{The number of days to slide the window for generating each
window for analysis.}

\item{\code{inputPaths}}{The vector of paths to the input directories for each window}

\item{\code{inputFilePaths}}{The vector of paths to the input signal files for each window}

\item{\code{outputPaths}}{The vector of paths to the output directories for each window}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-DielWindowedSignal-new}{\code{DielWindowedSignal$new()}}
\item \href{#method-DielWindowedSignal-createWindows}{\code{DielWindowedSignal$createWindows()}}
\item \href{#method-DielWindowedSignal-analyze}{\code{DielWindowedSignal$analyze()}}
\item \href{#method-DielWindowedSignal-summarizeWindows}{\code{DielWindowedSignal$summarizeWindows()}}
\item \href{#method-DielWindowedSignal-clone}{\code{DielWindowedSignal$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DielWindowedSignal-new"></a>}}
\if{latex}{\out{\hypertarget{method-DielWindowedSignal-new}{}}}
\subsection{Method \code{new()}}{
Create an instance of the class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DielWindowedSignal$new(
  signal,
  path,
  dateStart,
  dateEnd,
  windowStart,
  windowEnd,
  windowDays,
  timeZone,
  slideDays = 1
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{signal}}{The signal object from which the windows are extracted.
Expected data type is a disco::Signal object.}

\item{\code{path}}{The path to the analysis input/output on the file system.
Expected data type is a character vector with a single element.}

\item{\code{dateStart}}{The date to start the first window.
Expected data type is either a Date object or a character vector
with a single element that is coercible to a Date with as.Date 
using a default format.}

\item{\code{dateEnd}}{The date on which to end the last window.
Expected data type is either a Date object or a character vector
with a single element that is coercible to a Date with as.Date 
using a default format.}

\item{\code{windowStart}}{The time of day to start a given window.
Expected data type is a character vector with a single element.
Format should be interpretable by as.POSIXct by default.}

\item{\code{windowEnd}}{The time of day to end a given window.
Expected data type is a character vector with a single element.
Format should be interpretable by as.POSIXct by default.}

\item{\code{windowDays}}{The number of days for a given window.
Expected data type is an numeric or integer vector with a single
element.}

\item{\code{timeZone}}{The time zone for the other time related arguments.
Expected data type is a character vector with a single element.}

\item{\code{slideDays}}{Optional: number of days to slide the window for generating each
window for analysis.
Defaults value is 1.
Expected data type is a numeric or integer vector with a 
single element.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DielWindowedSignal-createWindows"></a>}}
\if{latex}{\out{\hypertarget{method-DielWindowedSignal-createWindows}{}}}
\subsection{Method \code{createWindows()}}{
Parses the signal into windows based on the window definitions
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DielWindowedSignal$createWindows(
  outerDir = "dates",
  innerDir = "input",
  fileName = "signal",
  minimumRecords = 1,
  isValid = NULL,
  validFunction = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{outerDir}}{Optional: directory structure from the base path where the folders 
corresponding to analysis windows should be placed.
Default value is "dates".
Expected data type is a character vector with a single element.}

\item{\code{innerDir}}{Optional: name of the directory within each window folder where the 
signal file for that window should be placed.
Default value is "input".
Expected data type is a character vector with a single element.}

\item{\code{fileName}}{Optional: file name to use for the signal within a given window.
Default value is "signal".
Expected data type is a character vector with a single element.}

\item{\code{minimumRecords}}{Optional: a signal for a window needs at least this number of 
records for the window to be created. A null value indicates that 
the number of signal records should not be used to determine
valid windows.
Default value is 1 (windows with 0 records will not be created).
Expected data type is an atomic vector with a single numeric 
or integer element.}

\item{\code{isValid}}{Optional: logical flags to determine if a window should (TRUE) or 
should not (FALSE) be created. A null value indicates all windows
should initially be considered valid, pending further evaluation
based on criteria defined by other arguments.
Default value is NULL.
Expected data type is an atomic vector of logical values with the 
same length as the number of potential windows.}

\item{\code{validFunction}}{Optional: function to call to determine if a signal for a given
day should be considered valid (function returns TRUE) or invalid
(function returns FALSE). Providing a null value disables 
this feature.
Default value is NULL.
Expected data type is a function with a single required argument
called "signal", to which the signal for a given window will be
passed. The function should return a logical vector with
a single element.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisibly returns the character vector representing the valid
  windows.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DielWindowedSignal-analyze"></a>}}
\if{latex}{\out{\hypertarget{method-DielWindowedSignal-analyze}{}}}
\subsection{Method \code{analyze()}}{
Runs the provided analyzer object for all windows
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DielWindowedSignal$analyze(
  signalDerivation,
  outerDir = "dates",
  innerDir = "output"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{signalDerivation}}{A SignalDerivation object that will perform the analysis
for each window}

\item{\code{outerDir}}{Optional: directory structure from the base path where the folders 
corresponding to analysis windows should be placed.
Default value is "dates".}

\item{\code{innerDir}}{Optional: name of the directory within each window folder where the 
output data for that window should be placed.
Default value is "output".}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisibly returns a character vector with the paths to the 
  derivation outputs.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DielWindowedSignal-summarizeWindows"></a>}}
\if{latex}{\out{\hypertarget{method-DielWindowedSignal-summarizeWindows}{}}}
\subsection{Method \code{summarizeWindows()}}{
Uses the provided SignalSummarizer to generate a summary
  of the analysis of each window.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DielWindowedSignal$summarizeWindows(
  signalSummarizer,
  summaryDir = "summary",
  useResults = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{signalSummarizer}}{A signal summarizer that will generate the summary output for each
window}

\item{\code{summaryDir}}{Optional: path from the base path where the summary output 
will be written.
Default value is "summary".}

\item{\code{useResults}}{Optional: switch to turn of summarization of results.
Default value is TRUE (results will be sumarized).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
No return value.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DielWindowedSignal-clone"></a>}}
\if{latex}{\out{\hypertarget{method-DielWindowedSignal-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DielWindowedSignal$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
