% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Signal.R
\name{Signal}
\alias{Signal}
\title{R6 Class representing a signal data frame}
\description{
This is an implementation of the Signal interface that is
  composed of a DataTable object for the time series data
}
\section{Super class}{
\code{\link[disco:DataTable]{disco::DataTable}} -> \code{Signal}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{timeHeader}}{The name of the column in the data frame with the time data}

\item{\code{timeFormat}}{Charater string with the time format (strptime)}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Signal-new}{\code{Signal$new()}}
\item \href{#method-Signal-getTime}{\code{Signal$getTime()}}
\item \href{#method-Signal-setTimeHeader}{\code{Signal$setTimeHeader()}}
\item \href{#method-Signal-setTimeZone}{\code{Signal$setTimeZone()}}
\item \href{#method-Signal-getDataframe}{\code{Signal$getDataframe()}}
\item \href{#method-Signal-getWindow}{\code{Signal$getWindow()}}
\item \href{#method-Signal-interpolate}{\code{Signal$interpolate()}}
\item \href{#method-Signal-trim}{\code{Signal$trim()}}
\item \href{#method-Signal-trimEdges}{\code{Signal$trimEdges()}}
\item \href{#method-Signal-filterVariables}{\code{Signal$filterVariables()}}
\item \href{#method-Signal-filterRows}{\code{Signal$filterRows()}}
\item \href{#method-Signal-writeCSV}{\code{Signal$writeCSV()}}
\item \href{#method-Signal-plotSummary}{\code{Signal$plotSummary()}}
\item \href{#method-Signal-plot}{\code{Signal$plot()}}
\item \href{#method-Signal-clone}{\code{Signal$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="disco" data-topic="DataTable" data-id="getLength"><a href='../../disco/html/DataTable.html#method-DataTable-getLength'><code>disco::DataTable$getLength()</code></a></li>
<li><span class="pkg-link" data-pkg="disco" data-topic="DataTable" data-id="getMetaColumn"><a href='../../disco/html/DataTable.html#method-DataTable-getMetaColumn'><code>disco::DataTable$getMetaColumn()</code></a></li>
<li><span class="pkg-link" data-pkg="disco" data-topic="DataTable" data-id="getMetaColumns"><a href='../../disco/html/DataTable.html#method-DataTable-getMetaColumns'><code>disco::DataTable$getMetaColumns()</code></a></li>
<li><span class="pkg-link" data-pkg="disco" data-topic="DataTable" data-id="getVariable"><a href='../../disco/html/DataTable.html#method-DataTable-getVariable'><code>disco::DataTable$getVariable()</code></a></li>
<li><span class="pkg-link" data-pkg="disco" data-topic="DataTable" data-id="setVariable"><a href='../../disco/html/DataTable.html#method-DataTable-setVariable'><code>disco::DataTable$setVariable()</code></a></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signal-new"></a>}}
\if{latex}{\out{\hypertarget{method-Signal-new}{}}}
\subsection{Method \code{new()}}{
Create an instance of class Signal
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signal$new(
  x,
  metaColumns = NULL,
  timeHeader = "time",
  timeFormat = "\%Y-\%m-\%d \%H:\%M:\%S",
  timeZone = "UTC",
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{R object indicating the source of information for constructing a signal.
If the class of the object is a character string, a signal will be constructed from 
a standard DataTable csv file. If the class of the object is a data frame, a signal
will be constructed from the data frame. Note that the constructor will try to turn
the time column into a POSIXct if it is not already that type (based on the provided
time format and time zone).}

\item{\code{metaColumns}}{Optional data frame of metadata for the columns in the signal. Metadata from the
text file will be used if constructing from a file. Metadata must be provided if
constructing from a dataframe.
Defaults to NULL.}

\item{\code{timeHeader}}{Optional character string representing the header for the table column with time data.
Defaults to "time".}

\item{\code{timeFormat}}{Optional character string representing the format in "strptime" for the time column
that needs to be converted from a character string vector.
Defaults to <4 character year>:<2 character month of year>:<2 character day of month>
<24 hour time>:<2 character minutes of hour>:<2 character seconds of minute>}

\item{\code{timeZone}}{Optional system specific string for the time zone for the times column.
Defaults to "UTC"}

\item{\code{...}}{Optional additional arguments passed to as.POSIXct for converting the time
data to a POSIXct vector.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A reference to an object that is a new instance of the class
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signal-getTime"></a>}}
\if{latex}{\out{\hypertarget{method-Signal-getTime}{}}}
\subsection{Method \code{getTime()}}{
Get the vector of values representing the times for the signal data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signal$getTime()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A vector of times.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signal-setTimeHeader"></a>}}
\if{latex}{\out{\hypertarget{method-Signal-setTimeHeader}{}}}
\subsection{Method \code{setTimeHeader()}}{
Set the time header
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signal$setTimeHeader(timeHeader)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{timeHeader}}{Character string representing the new time header to use}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The old value of the time header
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signal-setTimeZone"></a>}}
\if{latex}{\out{\hypertarget{method-Signal-setTimeZone}{}}}
\subsection{Method \code{setTimeZone()}}{
Set the time zone
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signal$setTimeZone(timeZone)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{timeZone}}{Character string representing the time zone}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The previous setting for the time zone
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signal-getDataframe"></a>}}
\if{latex}{\out{\hypertarget{method-Signal-getDataframe}{}}}
\subsection{Method \code{getDataframe()}}{
Get the signal in a data frame format
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signal$getDataframe()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Copy of the signal data in data frame format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signal-getWindow"></a>}}
\if{latex}{\out{\hypertarget{method-Signal-getWindow}{}}}
\subsection{Method \code{getWindow()}}{
Get a subset of the signal based on a provided window of time
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signal$getWindow(minTime, maxTime)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{minTime}}{POSIXct object with the starting time of the window}

\item{\code{maxTime}}{POSIXct object with the ending time of the window}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new signal object representing the subset of the current signal
  defined by the provided minimum and maximum times.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signal-interpolate"></a>}}
\if{latex}{\out{\hypertarget{method-Signal-interpolate}{}}}
\subsection{Method \code{interpolate()}}{
Interpolates a signal based on the provided time vector
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signal$interpolate(headers, time, timeMeta = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{headers}}{Headers for variables that should be included in the interpolated
signal.
Expected data type is a character vector.}

\item{\code{time}}{Time vector providing the basis for the interpolation.
Expected data type is a vector of POSIXct values.}

\item{\code{timeMeta}}{Optional: the metadata for the time column in the interpolated
signal. Providing a NULL value will result in the metadata for
time in the current signal being used for the interpolated signal.
Default value is NULL.
Expected data type is a character vector.}

\item{\code{...}}{Optional: any additional arguments are passed to the approx() 
function used to perform the interpolations.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new signal with values interpolated from the current
  signal based on the provided time vector
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signal-trim"></a>}}
\if{latex}{\out{\hypertarget{method-Signal-trim}{}}}
\subsection{Method \code{trim()}}{
Trims the signal based on indices provided
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signal$trim(firstIndex, lastIndex)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{firstIndex}}{Index that will become the first element of the signal}

\item{\code{lastIndex}}{Index that will become the last element of the signal}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The new length of the signal
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signal-trimEdges"></a>}}
\if{latex}{\out{\hypertarget{method-Signal-trimEdges}{}}}
\subsection{Method \code{trimEdges()}}{
Trims the signal based on skipped rows
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signal$trimEdges(skipBeginning, skipEnding)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{skipBeginning}}{Rows to skip at the beginning of the signal}

\item{\code{skipEnding}}{Rows to skip at the end of the signal}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The new length of the signal
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signal-filterVariables"></a>}}
\if{latex}{\out{\hypertarget{method-Signal-filterVariables}{}}}
\subsection{Method \code{filterVariables()}}{
Filter the signal to the desired variables
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signal$filterVariables(headers)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{headers}}{Vector of character strings representing the headers for
variable to keep. All other variables will be excluded, 
escept the variable with time.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Value returned by the super$filterVariables method
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signal-filterRows"></a>}}
\if{latex}{\out{\hypertarget{method-Signal-filterRows}{}}}
\subsection{Method \code{filterRows()}}{
Removes the rows designated by the provided indices
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signal$filterRows(index, out = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{index}}{A vector of numerical or logical indices. The rows specified by
the numbers in the vector will be removed, or logical values of 'FALSE' 
in the vector will indicate that row should be removed removed.}

\item{\code{out}}{Optional logical value indicating if filter is in the "out" or "in" direction.
Defaluts to "TRUE", which will remove the rows with the provided indices. Setting
to "FALSE" will remove all rows except those with the provided indices.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The new length of the signal after rows are removed
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signal-writeCSV"></a>}}
\if{latex}{\out{\hypertarget{method-Signal-writeCSV}{}}}
\subsection{Method \code{writeCSV()}}{
Write the signal in csv format
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signal$writeCSV(path, name, headers = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{path}}{The path to the written files}

\item{\code{name}}{The base name of the written files}

\item{\code{headers}}{Optional vector of variable names to specify the columns to be output.
Defaults to NULL which will output all columns.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
No defined return value.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signal-plotSummary"></a>}}
\if{latex}{\out{\hypertarget{method-Signal-plotSummary}{}}}
\subsection{Method \code{plotSummary()}}{
Plot a summary of the multivariate signal
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signal$plotSummary(
  x = NULL,
  mar = c(4, 4, 1, 1) + 0.1,
  mfrow = NULL,
  headers = character()
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{Vector to plot on the x axis
Defaults to signal time variable}

\item{\code{mar}}{Value for the graphing parameter controling margins
Defaults to \code{c(4, 4, 1, 1) + 0.1}}

\item{\code{mfrow}}{Value for graphing parameter controlling multipanel plots
Defaults to \code{c(length(self$table$data) - 1, 1)}}

\item{\code{headers}}{Vector of character strings specifying the headers for which
variables to summarize.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
No defined return value.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signal-plot"></a>}}
\if{latex}{\out{\hypertarget{method-Signal-plot}{}}}
\subsection{Method \code{plot()}}{
Plots a single variable in the signal based on the provided header
  for the variable
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signal$plot(
  header,
  x = self$getTime(),
  timeZone = NA,
  y = self$getVariable(header),
  xlim = c(min(x), max(x)),
  xlab = self$timeHeader,
  ylim = c(min(y, na.rm = TRUE), max(y, na.rm = TRUE)),
  ylab = sprintf("\%s (\%s)", header, self$metaColumns["units", header]),
  compareWith = list(),
  comp.colors = c("purple", "orange", "green"),
  comp.pchs = c(0, 2, 5),
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{header}}{Name of the variable to plot on the y axis.}

\item{\code{x}}{Variable plotted on x axis. 
Default value is the time.}

\item{\code{timeZone}}{If specified, the time zone for the datetime scale.
Defult value is NA (no change in time zone).}

\item{\code{y}}{Variable plotted on y axis. 
Default value is the values in the provided header argument.}

\item{\code{xlim}}{Vector of 2 values for the min and max of x axis scale.
Default is min and max of x variable}

\item{\code{xlab}}{Label for x axis.
Default value is the header for time data.}

\item{\code{ylim}}{Vector of 2 values for the min and max of y axis scale.
Default value is min and max of y variable.}

\item{\code{ylab}}{Label for y axis.
Default value is the header selected and the units
for that variable}

\item{\code{compareWith}}{Vector of signals to plot on the same axes.
Specifying signals for comparison will adjust the xlim
and ylim values to be sure all values will be visible on
plot.
Default value is an empty list (no additional plots).}

\item{\code{comp.colors}}{A vector of character strings specifying colors for additional
plots.
Defaults to a color blind friendly palette of purple, orange,
and green.}

\item{\code{comp.pchs}}{A vector of integers specifying the point symbol to use for 
additional plots.
Defaults to square, triangle, and diamond.}

\item{\code{...}}{Any remaining arguments provided will be passed to the call to
the plot.default method, allowing for further customization of
the plot.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
No defined return value.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Signal-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Signal-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Signal$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
